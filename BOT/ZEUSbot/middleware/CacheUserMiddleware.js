const {Player, PlayerStatus, PlayerInfo, PlayerResources, Ban, LastWills} = require("../database/Models");
const Data = require("../models/CacheData");
const User = require("../models/User");
const keyboard = require("../variables/Keyboards");
const commands = require("../variables/Commands");
const SceneManager = require("../controllers/SceneController")
const Builders = require("../controllers/BuildersAndControlsScripts")
const api = require("./API")

module.exports = async (context, next) =>
{
    try
    {
        context.command = context.text?.toLowerCase()
        const peerId = context.peerType === "chat" ? context.senderId : context.peerId
        if(context.peerType === "chat")
        {
            if(Data.countryChats[context.peerId] && peerId > 0)
            {
                Data.countries[Data.countryChats[context.peerId]].active++
            }
        }
        if(Data.users[peerId] && !Data.users[peerId]?.isBanned)
        {
            context.player = Data.users[peerId]
            if(Data.officials[context.player.countryID])
            {
                if (Data.officials[context.player.countryID][peerId])
                {
                    context.official = Data.officials[context.player.countryID][peerId]
                }
            }
            if(!context.player.HasEffect("bot_ignore"))
            {
                return next()
            }
        }
        else
        {
            const user = await Player.findOne({where: {id: peerId}})
            if(user)
            {
                if(!user.dataValues.isBanned)
                {
                    const status = await PlayerStatus.findOne({where: {id: peerId}})
                    const info = await PlayerInfo.findOne({where: {id: peerId}})
                    const resources = await PlayerResources.findOne({where: {id: peerId}})
                    Data.users[peerId] = new User(user, status, info, resources)
                    Data.users[peerId].state = SceneManager.StartScreen
                    context.player = Data.users[peerId]
                    context.player.lastWill = await LastWills.findOne({where: {userID: context.player.id}})?.dataValues
                    if(Data.officials[context.player.countryID])
                    {
                        if (Data.officials[context.player.countryID][peerId])
                        {
                            context.official = Data.officials[context.player.countryID][peerId]
                        }
                    }
                    return next()
                }
                else
                {
                    const ban = await Ban.findOne({where: {userID: peerId}})
                    if(context.peerType === "chat")
                    {
                        await context.reply(`üö´ –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –ø–æ –ø—Ä–∏—á–∏–Ω–µ: ${ban?.dataValues.reason}`)
                        await api.KickUser(context.peerId, peerId)
                    }
                    else
                    {
                        await context.send(`üö´–í–Ω–∏–º–∞–Ω–∏–µ!üö´\n\n–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ *public218388422 (¬´ZEUS - –í—Å–µ–ª–µ–Ω–Ω–∞—è –∏–≥—Ä–æ–∫–æ–≤¬ª)\n–ë–∞–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ: ${ban?.dataValues.reason}\n–ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π - –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω–æ–º—É –∏–∑ –∞–¥–º–∏–Ω–æ–≤:\n${Data.GiveAdminList()}`, {
                            keyboard: keyboard.none
                        })
                    }
                }

            }
            else if(context.peerType !== "chat")
            {
                const current_keyboard = [[keyboard.registrationButton]]
                if(context.command?.match(commands.registration))
                {
                    await Builders.Registration(context, current_keyboard, {
                        StartMenu: SceneManager.StartScreen,
                        StartMenuKeyboard: SceneManager.GetStartMenuKeyboard,
                        User: User
                    })
                }
                else if(context.peerType === "user")
                {
                    context.send(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–æ–µ–∫—Ç ZEUS, –±–æ–ª–µ–µ —Ç—ã—Å—è—á–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É–∂–µ –¥–≤–∞ –≥–æ–¥–∞ –∏–≥—Ä–∞—é—Ç —Å –Ω–∞–º–∏.\n–í–æ–π–Ω—ã, –∏–Ω—Ç—Ä–∏–≥–∏, —Å–∏–º—É–ª—è—Ç–æ—Ä –∞–Ω—Ç–∏—á–Ω–æ–≥–æ –∂–∏—Ç–µ–ª—è, –≤—Å—ë —ç—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è —Ç–µ–±—è... –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é –∏–≥—Ä–æ–∫–∞... \n–° –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è –∏ –≤–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.\n–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è" –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∫—Ç–∞.`,
                        {
                            keyboard: keyboard.build(current_keyboard)
                        })
                }
            }
        }
    }
    catch (e)
    {
        console.log(e)
    }
}